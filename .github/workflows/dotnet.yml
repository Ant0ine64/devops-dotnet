name: .NET

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

jobs:
  build:

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v2
    - name: Setup .NET
      uses: actions/setup-dotnet@v1
      with:
        dotnet-version: 6.0.x
    - name: Restore dependencies
      run: dotnet restore
    - name: Build
      run: dotnet build --no-restore
    - name: Test
      run: dotnet test --no-build --verbosity normal
    - name: Publish
      run: dotnet publish --self-contained true -r linux-x64
    - name: Upload a Build Artifact
      uses: actions/upload-artifact@v2.3.1
      with:
        name: hello-world_linux-x64
        path: /home/runner/work/devops-dotnet/devops-dotnet/ConsoleApp1/bin/Debug/net6.0/linux-x64/publish/
        
  build-win:

    runs-on: windows-latest

    steps:
      - uses: actions/checkout@v2
      - name: Setup .NET
        uses: actions/setup-dotnet@v1
        with:
          dotnet-version: 6.0.x
      - name: Restore dependencies
        run: dotnet restore
      - name: Build
        run: dotnet build --no-restore
      - name: Test
        run: dotnet test --no-build --verbosity normal
      - name: Publish
        run: dotnet publish --self-contained true -r win-x64
      - name: Upload a Build Artifact
        uses: actions/upload-artifact@v2.3.1
        with:
          name: hello-world_win-x64
          path: D:\a\devops-dotnet\devops-dotnet\ConsoleApp1\bin\Debug\net6.0\win-x64\publish\
          
  release:
    runs-on: ubuntu-latest
    needs: 
      - build
      - build-win
        
    steps:
      - name: Download math result for job 2
        uses: actions/download-artifact@v2
        with:
          name: hello-world_linux-x64
      - run : ls -l
      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref }}
          release_name: Release ${{ github.ref }}
          draft: false
          prerelease: false
      - name: Upload Release Asset
        id: upload-release-asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }} # This pulls from the CREATE RELEASE step above, referencing it's ID to get its outputs object, which include a `upload_url`. See this blog post for more info: https://jasonet.co/posts/new-features-of-github-actions/#passing-data-to-future-steps 
          asset_path: hello-wolrd_linux-x64.zip
          asset_name: hello-wolrd_linux-x64.zip
          asset_content_type: application/zip